<?php
/**
 * ApplicationApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Brave\NeucoreApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Brave Collective Core Services API
 *
 * Client library of Brave Collective Core Services API
 *
 * OpenAPI spec version: 0.6.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Brave\NeucoreApi;

use \Brave\NeucoreApi\Configuration;
use \Brave\NeucoreApi\ApiException;
use \Brave\NeucoreApi\ObjectSerializer;

/**
 * ApplicationApiTest Class Doc Comment
 *
 * @category Class
 * @package  Brave\NeucoreApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ApplicationApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for allianceGroupsBulkV1
     *
     * Return groups of multiple alliances..
     *
     */
    public function testAllianceGroupsBulkV1()
    {
    }

    /**
     * Test case for allianceGroupsV1
     *
     * Return groups of the alliance..
     *
     */
    public function testAllianceGroupsV1()
    {
    }

    /**
     * Test case for allianceGroupsV2
     *
     * Return groups of the alliance..
     *
     */
    public function testAllianceGroupsV2()
    {
    }

    /**
     * Test case for charactersV1
     *
     * Return all characters of the player account to which the character ID belongs..
     *
     */
    public function testCharactersV1()
    {
    }

    /**
     * Test case for corpGroupsBulkV1
     *
     * Return groups of multiple corporations..
     *
     */
    public function testCorpGroupsBulkV1()
    {
    }

    /**
     * Test case for corpGroupsV1
     *
     * Return groups of the corporation..
     *
     */
    public function testCorpGroupsV1()
    {
    }

    /**
     * Test case for corpGroupsV2
     *
     * Return groups of the corporation..
     *
     */
    public function testCorpGroupsV2()
    {
    }

    /**
     * Test case for esiV1
     *
     * Makes an ESI GET request on behalf on an EVE character and returns the result..
     *
     */
    public function testEsiV1()
    {
    }

    /**
     * Test case for groupsBulkV1
     *
     * Return groups of multiple players, identified by one of their character IDs..
     *
     */
    public function testGroupsBulkV1()
    {
    }

    /**
     * Test case for groupsV1
     *
     * Return groups of the character's player account..
     *
     */
    public function testGroupsV1()
    {
    }

    /**
     * Test case for groupsV2
     *
     * Return groups of the character's player account..
     *
     */
    public function testGroupsV2()
    {
    }

    /**
     * Test case for mainV1
     *
     * Returns the main character of the player account to which the character ID belongs..
     *
     */
    public function testMainV1()
    {
    }

    /**
     * Test case for mainV2
     *
     * Return the main character of the player account to which the character ID belongs..
     *
     */
    public function testMainV2()
    {
    }

    /**
     * Test case for memberTrackingV1
     *
     * Return corporation member tracking data..
     *
     */
    public function testMemberTrackingV1()
    {
    }

    /**
     * Test case for showV1
     *
     * Show app information..
     *
     */
    public function testShowV1()
    {
    }
}
